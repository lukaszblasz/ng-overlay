{"version":3,"sources":["webpack:///webpack/bootstrap 6653d3a13ce801fc8a60","webpack:///./src/overlay.directive.js","webpack:///./src/overlay.template.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;AC7DA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4DAA4D,uBAAuB;;AAEnF;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sE;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA,C","file":"overlay.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6653d3a13ce801fc8a60","import template from './overlay.template';\r\n\r\nclass OverlayDirective {\r\n\r\n    classes() {\r\n        return {\r\n            overlayWrapper:'ng-overlay-wrapper'\r\n        }\r\n    }\r\n\r\n    constructor($compile, $sce) {\r\n        this.$compile = $compile;\r\n        this.$sce = $sce;\r\n\r\n        this.restrict = 'A';\r\n        this.scope = {\r\n            ngOverlayTemplate: '<',\r\n            ngOverlayTrigger: '@',\r\n            ngOverlayData: '<'\r\n        };\r\n        \r\n        this.replace = true;\r\n    }\r\n\r\n    link(scope, el, attrs){\r\n        this.handleEvents(el, scope);\r\n    }\r\n\r\n    createOverlayContainer(scope) {\r\n        let classes = this.classes();\r\n        this.overlayWrapper = document.querySelectorAll(`.${classes.overlayWrapper}`);\r\n\r\n        if(this.overlayWrapper.length){\r\n            this.overlayWrapper.remove();\r\n        }\r\n\r\n        let body = angular.element(document.getElementsByTagName('body')[0]);\r\n\r\n        this.overlayWrapper = angular.element(template(scope.ngOverlayTemplate));\r\n        body.append(this.$compile(this.overlayWrapper)(scope));\r\n    }\r\n\r\n    handleEvents(el, scope) {\r\n        el.on(scope.ngOverlayTrigger, () => {\r\n            this.createOverlayContainer(scope);\r\n        });\r\n\r\n        scope.close = () => {\r\n            this.overlayWrapper.remove();\r\n        }\r\n    }\r\n}\r\n\r\nOverlayDirective.$inject = ['$compile'];\r\n\r\nangular.module('ngOverlay', [])\r\n.directive('ngOverlay', ($compile) => new OverlayDirective($compile));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/overlay.directive.js\n// module id = 0\n// module chunks = 0 1","export default function(content){\r\n    return `<div class=\"ng-overlay-wrapper\">\r\n        <div class=\"ng-overlay-controls\">\r\n            <button ng-click=\"close()\" class=\"ng-overlay-close\">Close</button>\r\n        </div>\r\n        <div class=\"ng-overlay-content\">${content}</div>\r\n    </div>`\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/overlay.template.js\n// module id = 1\n// module chunks = 0 1"],"sourceRoot":""}