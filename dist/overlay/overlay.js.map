{"version":3,"sources":["webpack:///webpack/bootstrap 0cfec15a1062bf7e3620","webpack:///./src/overlay.directive.js","webpack:///./src/overlay.template.js","webpack:///./src/overlay.scss"],"names":["OverlayDirective","classes","overlayWrapper","constructor","$compile","$timeout","restrict","scope","ngOverlayTemplate","ngOverlayTrigger","ngOverlayData","ngOverlayShow","ngOverlayClose","ngOverlayCloseTimeout","replace","link","el","attrs","handleEvents","$watch","newValue","oldValue","visible","createOverlayContainer","closeOverlay","closingOverlay","closeOverlayActions","parseInt","remove","document","querySelectorAll","length","body","angular","element","getElementsByTagName","template","append","on","$apply","close","$inject","module","directive","content"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA;AACA;;AAEA,MAAMA,gBAAN,CAAuB;;AAEnBC,cAAU;AACN,eAAO;AACHC,4BAAgB;AADb,SAAP;AAGH;;AAEDC,gBAAYC,QAAZ,EAAsBC,QAAtB,EAAgC;AAC5B,aAAKD,QAAL,GAAgBA,QAAhB;AACA,aAAKC,QAAL,GAAgBA,QAAhB;;AAEA,aAAKC,QAAL,GAAgB,GAAhB;AACA,aAAKC,KAAL,GAAa;AACTC,+BAAmB,GADV;AAETC,8BAAkB,GAFT;AAGTC,2BAAe,GAHN;AAITC,2BAAe,kBAJN;AAKTC,4BAAgB,mBALP;AAMTC,mCAAuB;AANd,SAAb;;AASA,aAAKC,OAAL,GAAe,IAAf;AACH;;AAEDC,SAAKR,KAAL,EAAYS,EAAZ,EAAgBC,KAAhB,EAAuB;AACnB,YAAG,CAACV,MAAMG,aAAV,EAAwB;AACpBH,kBAAMG,aAAN,GAAsB,EAAtB;AACH;AACD,aAAKQ,YAAL,CAAkBF,EAAlB,EAAsBT,KAAtB;;AAEAA,cAAMY,MAAN,CAAa,eAAb,EAA8B,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClD,gBAAID,YAAYA,SAASE,OAAT,KAAqB,IAArC,EAA2C;AACvC,qBAAKC,sBAAL,CAA4BhB,KAA5B;AACH,aAFD,MAEO,IAAIa,YAAYA,SAASE,OAAT,KAAqB,KAArC,EAA4C;AAC/C,qBAAKE,YAAL,CAAkBjB,KAAlB;AACH;AACJ,SAND,EAMG,IANH;AAOH;;AAEDiB,iBAAajB,KAAb,EAAoB;AAChBA,cAAMkB,cAAN,GAAuB,IAAvB;AACA,YAAGlB,MAAMM,qBAAT,EAAgC;AAC5B,iBAAKR,QAAL,CAAc,MAAK;AACf,qBAAKqB,mBAAL,CAAyBnB,KAAzB;AACH,aAFD,EAEGoB,SAASpB,MAAMM,qBAAf,CAFH;AAGH,SAJD,MAKK;AACD,iBAAKa,mBAAL,CAAyBnB,KAAzB;AACH;AACJ;;AAEDmB,wBAAoBnB,KAApB,EAA0B;AACtB,YAAI,KAAKL,cAAT,EAAyB;AACrBK,kBAAMkB,cAAN,GAAuB,KAAvB;AACA,iBAAKvB,cAAL,CAAoB0B,MAApB;AACH;;AAED,YAAIrB,MAAMK,cAAV,EAA0B;AACtBL,kBAAMK,cAAN;AACH;AACJ;;AAEDW,2BAAuBhB,KAAvB,EAA8B;AAC1B,YAAIN,UAAU,KAAKA,OAAL,EAAd;AACA,aAAKC,cAAL,GAAsB2B,SAASC,gBAAT,CAA2B,IAAG7B,QAAQC,cAAe,EAArD,CAAtB;;AAEA,YAAG,KAAKA,cAAL,CAAoB6B,MAAvB,EAA8B;AAC1B,iBAAK7B,cAAL,CAAoB0B,MAApB;AACH;;AAED,YAAII,OAAOC,QAAQC,OAAR,CAAgBL,SAASM,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAhB,CAAX;;AAEA,aAAKjC,cAAL,GAAsB+B,QAAQC,OAAR,CAAgB,0EAAAE,CAAS7B,MAAMC,iBAAf,CAAhB,CAAtB;AACAwB,aAAKK,MAAL,CAAY,KAAKjC,QAAL,CAAc,KAAKF,cAAnB,EAAmCK,KAAnC,CAAZ;AACA,aAAKF,QAAL,CAAc,MAAM;AAChB,gBAAIE,MAAMI,aAAV,EAAyB;AACrBJ,sBAAMI,aAAN;AACH;AACJ,SAJD,EAIG,CAJH;AAKH;;AAEDO,iBAAaF,EAAb,EAAiBT,KAAjB,EAAwB;AACpBS,WAAGsB,EAAH,CAAM/B,MAAME,gBAAZ,EAA8B,MAAM;AAChCF,kBAAMG,aAAN,CAAoBY,OAApB,GAA8B,IAA9B;AACAf,kBAAMgC,MAAN;AACH,SAHD;;AAKAhC,cAAMiC,KAAN,GAAc,MAAM;AAChBjC,kBAAMG,aAAN,CAAoBY,OAApB,GAA8B,KAA9B;AACH,SAFD;AAGH;AA3FkB;;AA8FvBtB,iBAAiByC,OAAjB,GAA2B,CAAC,UAAD,EAAa,UAAb,CAA3B;;AAEAR,QAAQS,MAAR,CAAe,WAAf,EAA4B,CAAC,YAAD,CAA5B,EACCC,SADD,CACW,WADX,EACwB,CAACvC,QAAD,EAAWC,QAAX,KAAwB,IAAIL,gBAAJ,CAAqBI,QAArB,EAA+BC,QAA/B,CADhD,E;;;;;;;ACnGA,yDAAe,UAASuC,OAAT,EAAiB;AAC5B,WAAQ;;;;0CAI8BA,OAAQ;iBAJ9C;AAMH,C;;;;;;ACPD,yC","file":"overlay/overlay.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0cfec15a1062bf7e3620","import template from './overlay.template';\nimport './overlay.scss';\n\nclass OverlayDirective {\n\n    classes() {\n        return {\n            overlayWrapper: 'ng-overlay-wrapper'\n        };\n    }\n\n    constructor($compile, $timeout) {\n        this.$compile = $compile;\n        this.$timeout = $timeout;\n\n        this.restrict = 'A';\n        this.scope = {\n            ngOverlayTemplate: '<',\n            ngOverlayTrigger: '@',\n            ngOverlayData: '<',\n            ngOverlayShow: '&ngOverlayOnShow',\n            ngOverlayClose: '&ngOverlayOnClose',\n            ngOverlayCloseTimeout: '@'\n        };\n\n        this.replace = true;\n    }\n\n    link(scope, el, attrs) {\n        if(!scope.ngOverlayData){\n            scope.ngOverlayData = {}\n        }\n        this.handleEvents(el, scope);\n\n        scope.$watch('ngOverlayData', (newValue, oldValue) => {\n            if (newValue && newValue.visible === true) {\n                this.createOverlayContainer(scope);\n            } else if (newValue && newValue.visible === false) {\n                this.closeOverlay(scope);\n            }\n        }, true);\n    }\n\n    closeOverlay(scope) {\n        scope.closingOverlay = true;\n        if(scope.ngOverlayCloseTimeout) {\n            this.$timeout(()=> {\n                this.closeOverlayActions(scope);\n            }, parseInt(scope.ngOverlayCloseTimeout));\n        }\n        else {\n            this.closeOverlayActions(scope);\n        }\n    }\n\n    closeOverlayActions(scope){\n        if (this.overlayWrapper) {\n            scope.closingOverlay = false;\n            this.overlayWrapper.remove();\n        }\n\n        if (scope.ngOverlayClose) {\n            scope.ngOverlayClose();\n        }\n    }\n\n    createOverlayContainer(scope) {\n        let classes = this.classes();\n        this.overlayWrapper = document.querySelectorAll(`.${classes.overlayWrapper}`);\n\n        if(this.overlayWrapper.length){\n            this.overlayWrapper.remove();\n        }\n\n        let body = angular.element(document.getElementsByTagName('body')[0]);\n\n        this.overlayWrapper = angular.element(template(scope.ngOverlayTemplate));\n        body.append(this.$compile(this.overlayWrapper)(scope));\n        this.$timeout(() => {\n            if (scope.ngOverlayShow) {\n                scope.ngOverlayShow();\n            }\n        }, 0);\n    }\n\n    handleEvents(el, scope) {\n        el.on(scope.ngOverlayTrigger, () => {\n            scope.ngOverlayData.visible = true;\n            scope.$apply();\n        });\n\n        scope.close = () => {\n            scope.ngOverlayData.visible = false;\n        };\n    }\n}\n\nOverlayDirective.$inject = ['$compile', '$timeout'];\n\nangular.module('ngOverlay', ['ngSanitize'])\n.directive('ngOverlay', ($compile, $timeout) => new OverlayDirective($compile, $timeout));\n\n\n// WEBPACK FOOTER //\n// ./src/overlay.directive.js","export default function(content){\n    return `<div></div><div data-ng-class=\"{'ng-overlay-closing': closingOverlay}\" class=\"ng-overlay-wrapper\">\n        <div class=\"ng-overlay-controls\">\n            <button ng-click=\"close()\" class=\"ng-overlay-close\">Close</button>\n        </div>\n        <div class=\"ng-overlay-content\">${content}</div>\n    </div></div>`\n}\n\n\n// WEBPACK FOOTER //\n// ./src/overlay.template.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/overlay.scss\n// module id = 2\n// module chunks = 0 1"],"sourceRoot":""}